<?php

namespace Beluha\BlogBundle\Repository;
use Snc\RedisBundle\Doctrine\Cache\RedisCache;
use Predis\Client;


/**
 * PostRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PostRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Find latest
     * 
     * @param int $num How many posts to get
     * @return array
     */
    public function findLatest($num)
    {
      # init predis client
      $predis = new RedisCache();
      $predis->setRedis(new Client());
      # define cache lifetime period as 1 hour in seconds
      $cache_lifetime = 86400;
        
      /*$qb = $this->getQueryBilder()
                ->orderBy('p.createdAt','desc')
                ->setMaxResults($num);

        return $qb->getQuery()->getResult();*/
      return $this->getEntityManager()
            ->createQuery('SELECT p FROM BeluhaBlogBundle:Post p ORDER BY p.createdAt DESC')
            ->setMaxResults($num)
            ->setResultCacheDriver($predis)
            ->setResultCacheLifetime($cache_lifetime)
            ->getResult();
        
    }
    
    /**
     * Find first post
     * 
     * @return Post
     */
    public function findFirst()
    {
        $qb =  $this->getQueryBilder()
                ->orderBy('p.id', 'asc')
                ->setMaxResults(1);
        
        return $qb->getQuery()->getSingleResult();
    }
    
    private function getQueryBilder()
    {
        $em = $this->getEntityManager();
        $qb = $em->getRepository('BeluhaBlogBundle:Post')->createQueryBuilder('p');
        return $qb;
    }
    
}
